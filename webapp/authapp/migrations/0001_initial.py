# Generated by Django 5.0.7 on 2024-08-06 20:09

import django.contrib.auth.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Telephone',
            fields=[
                ('id', models.AutoField(default=0, primary_key=True, serialize=False)),
                ('telephone_prefix', models.IntegerField(default=48, validators=[django.core.validators.MinValueValidator(1, 'Minimum value must be 1'), django.core.validators.MaxValueValidator(999, 'Maximum value must be 999')], verbose_name='telephone number prefix')),
                ('telephone_number', models.CharField(max_length=9, validators=[django.core.validators.MinLengthValidator(9, 'Invalid telephone value')], verbose_name='telephone number')),
            ],
        ),
        migrations.CreateModel(
            name='AppUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=320, primary_key=True, serialize=False, verbose_name='email address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddConstraint(
            model_name='telephone',
            constraint=models.UniqueConstraint(fields=('telephone_prefix', 'telephone_number'), name='telephone_number_with_prefix_unique'),
        ),
        migrations.AddField(
            model_name='appuser',
            name='telephone',
            field=models.OneToOneField(on_delete=django.db.models.deletion.RESTRICT, to='authapp.telephone'),
        ),
    ]
